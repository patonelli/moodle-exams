%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (circulo2.eps)
%%CreationDate: (2020-09-25T20:30:46+00:00)
%%BoundingBox: -0 -0 114 114
%%HiResBoundingBox: 0 0 114 114
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 114 114
userdict begin
DisplayImage
0 0
114 114
12
114 114
1
1
1
1
FFFFFFFFFFFF00003FFFFFFFFFFFC0FFFFFFFFFFE00FFC01FFFFFFFFFFC0FFFFFFFFFF07FFFFF8
3FFFFFFFFFC0FFFFFFFFF03FFFFFFF07FFFFFFFFC0FFFFFFFFC1FFFFFFFFE0FFFFFFFFC0FFFFFF
FF0FFFFFFFFFFC3FFFFFFFC0FFFFFFFC3FFFFFFFFFFF0FFFFFFFC0FFFFFFF0FFFFFFFFFFFFC3FF
FFFFC0FFFFFFC3FFFFFFFFFFFFF1FFFFFFC0FFFFFF0FFFFFFFFFFFFFFC7FFFFFC0FFFFFE3FFFFF
FFFFFFFFFE3FFFFFC0FFFFFC7FFFFFFFFFFFFFFF8FFFFFC0FFFFF8FFFFFFFFFFFFFFFFC7FFFFC0
FFFFF3FFFFFFFFFFFFFFFFE3FFFFC0FFFFC7FFFFFFFFFFFFFFFFF9FFFFC0FFFF8FFFFFFFFFFFFF
FFFFFC7FFFC0FFFF1FFFFFFFFFFFFFFFFFFE3FFFC0FFFE3FFFFFFFFFFFFFFFFFFF1FFFC0FFFC7F
FFFFFFFFFFFFFFFFFF9FFFC0FFFCFFFFFFFFFFFFFFFFFFFFCFFFC0FFF9FFFFFFFFFFFFFFFFFFFF
E7FFC0FFF3FFFFFFFFFFFFFFFFFFFFF3FFC0FFE7FFFFFFFFFFFFFFFFFFFFF1FFC0FFC7FFFFFFFF
FFFFFFFFFFFFF9FFC0FF8FFFFFFFFFFFFFFFFFFFFFFCFFC0FF9FFFFFFFFFFFFFFFFFFFFFFE7FC0
FF3FFFFFFFFFFFFFFFFFFFFFFE7FC0FF3FFFFFFFFFFFFFFFFFFFFFFF3FC0FE7FFFFFFFFFFFFFFF
FFFFFFFF9FC0FE7FFFFFFFFFFFFFFFFFFFFFFF9FC0FCFFFFFFFFFFFFFFFFFFFFFFFFCFC0FCFFFF
FFFFFFFFFFFFFFFFFFFFCFC0F9FFFFFFFFFFFFFFFFFFFFFFFFE7C0F3FFFFFFFFFFFFFFFFFFFFFF
FFE7C0F3FFFFFFFFFFFFFFFFFFFFFFFFF3C0F7FFFFFFFFFFFFFFFFFFFFFFFFF3C0E7FFFFFFFFFF
FFFFFFFFFFFFFFFBC0E7FFFFFFFFFFFFFFFFFFFFFFFFF9C0EFFFFFFFFFFFFFFFFFFFFFFFFFF9C0
CFFFFFFFFFFFFFFFFFFFFFFFFFFDC0CFFFFFFFFFFFFFFFFFFFFFFFFFFCC0CFFFFFFFFFFFFFFFFF
FFFFFFFFFCC09FFFFFFFFFFFFFFFFFFFFFFFFFFEC09FFFFFFFFFFFFFFFFFFFFFFFFFFE409FFFFF
FFFFFFFFFFFFFFFFFFFFFE40BFFFFFFFFFFFFFFFFFFFFFFFFFFF403FFFFFFFFFFFFFFFFFFFFFFF
FFFF403FFFFFFFFFFFFFFFFFFFFFFFFFFF403FFFFFFFFFFFFFFFFFFFFFFFFFFF003FFFFFFFFFFF
FFFFFFFFFFFFFFFF007FFFFFFFFFFFFFFFFFFFFFFFFFFF007FFFFFFFFFFFFFFFFFFFFFFFFFFF00
7FFFFFFFFFFFFFFFFFFFFFFFFFFF807FFFFFFFFFFFFFFFFFFFFFFFFFFF807FFFFFFFFFFFFFFFFF
FFFFFFFFFF807FFFFFFFFFFFFFFFFFFFFFFFFFFF807FFFFFFFFFFFFF00000000000000007FFFFF
FFFFFFFF00000000000000007FFFFFFFFFFFFFFFFFFFFFFFFFFF807FFFFFFFFFFFFFFFFFFFFFFF
FFFF807FFFFFFFFFFFFFFFFFFFE03FFFFF807FFFFFFFFFFFFFFFFFFFE01FFFFF807FFFFFFFFFFF
FFFFFFFFE79FFFFF007FFFFFFFFFFFFFFFFFFFE73FFFFF003FFFFFFFFFFFFFFFFFFFE03FFFFF00
3FFFFFFFFFFFFFFFFFFFC03FFFFF003FFFFFFFFFFFFFFFFFFFCF3FFFFF403FFFFFFFFFFFFFFFFF
FFCE7FFFFF40BFFFFFFFFFFFFFFFFFFFCE7FFFFF409FFFFFFFFFFFFFFFFFFFFFFFFFFE409FFFFF
FFFFFFFFFFFFFFFFFFFFFE409FFFFFFFFFFFFFFFFFFFFFFFFFFEC0DFFFFFFFFFFFFFFFFFFFFFFF
FFFCC0CFFFFFFFFFFFFFFFFFFFFFFFFFFCC0CFFFFFFFFFFFFFFFFFFFFFFFFFFDC0EFFFFFFFFFFF
FFFFFFFFFFFFFFF9C0E7FFFFFFFFFFFFFFFFFFFFFFFFF9C0E7FFFFFFFFFFFFFFFFFFFFFFFFF9C0
F7FFFFFFFFFFFFFFFFFFFFFFFFF3C0F3FFFFFFFFFFFFFFFFFFFFFFFFF3C0F3FFFFFFFFFFFFFFFF
FFFFFFFFE7C0F9FFFFFFFFFFFFFFFFFFFFFFFFE7C0F9FFFFFFFFFFFFFFFFFFFFFFFFCFC0FCFFFF
FFFFFFFFFFFFFFFFFFFFCFC0FE7FFFFFFFFFFFFFFFFFFFFFFF9FC0FE7FFFFFFFFFFFFFFFFFFFFF
FF9FC0FF3FFFFFFFFFFFFFFFFFFFFFFF3FC0FF3FFFFFFFFFFFFFFFFFFFFFFF3FC0FF9FFFFFFFFF
FFFFFFFFFFFFFE7FC0FF8FFFFFFFFFFFFFFFFFFFFFFCFFC0FFCFFFFFFFFFFFFFFFFFFFFFF8FFC0
FFE7FFFFFFFFFFFFFFFFFFFFF9FFC0FFF3FFFFFFFFFFFFFFFFFFFFF3FFC0FFF9FFFFFFFFFFFFFF
FFFFFFE7FFC0FFF8FFFFFFFFFFFFFFFFFFFFCFFFC0FFFC7FFFFFFFFFFFFFFFFFFF8FFFC0FFFE7F
FFFFFFFFFFFFFFFFFF1FFFC0FFFF1FFFFFFFFFFFFFFFFFFE3FFFC0FFFF8FFFFFFFFFFFFFFFFFFC
7FFFC0FFFFC7FFFFFFFFFFFFFFFFF8FFFFC0FFFFE3FFFFFFFFFFFFFFFFF3FFFFC0FFFFF9FFFFFF
FFFFFFFFFFC7FFFFC0FFFFFC7FFFFFFFFFFFFFFF8FFFFFC0FFFFFE3FFFFFFFFFFFFFFF1FFFFFC0
FFFFFF0FFFFFFFFFFFFFFC3FFFFFC0FFFFFFC3FFFFFFFFFFFFF0FFFFFFC0FFFFFFF1FFFFFFFFFF
FFC3FFFFFFC0FFFFFFFC7FFFFFFFFFFF8FFFFFFFC0FFFFFFFE1FFFFFFFFFFE3FFFFFFFC0FFFFFF
FF83FFFFFFFFF07FFFFFFFC0FFFFFFFFF07FFFFFFF03FFFFFFFFC0FFFFFFFFFE07FFFFF81FFFFF
FFFFC0FFFFFFFFFFC03FFF00FFFFFFFFFFC0FFFFFFFFFFFC00000FFFFFFFFFFFC0
end
%%PageTrailer
%%Trailer
%%EOF
